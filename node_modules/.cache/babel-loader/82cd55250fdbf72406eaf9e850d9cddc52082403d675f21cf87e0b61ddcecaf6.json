{"ast":null,"code":"var _jsxFileName = \"/home/gayan/Documents/Personal/dish/src/modules/Home/components/HomeRecipeCard.tsx\",\n  _s = $RefreshSig$();\nimport { Grid } from '@mui/material';\nimport { useQuery } from 'react-query';\nimport { RecipeCard } from '../../../components/RecipeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomeRecipeCard = () => {\n  _s();\n  const {\n    data: {\n      recipes\n    } = {},\n    isFetching\n  } = useQuery(['test'], async () => {\n    const res = await fetch('https://api.spoonacular.com/recipes/random?apiKey=3a919f863b6f473e93b2473cdd0b6e3d');\n    return res.json();\n  });\n  console.log(recipes);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"main\",\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      width: {\n        sm: `calc(100% - ${EXPLORE_SIDE_PANEL_WIDTH}px)`\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), isFetching || !recipes ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: recipes.map(_ref => {\n        let {\n          id,\n          title,\n          image\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(SearchGridItem, {\n          id: id,\n          title: title,\n          image: image\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(RecipeCard, {\n    id: 123,\n    title: 'titel',\n    image: \"\",\n    discription: \"asdasdasd\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_s(HomeRecipeCard, \"Sl60a+p8deHLSFd+qJqTE3G6KWQ=\", false, function () {\n  return [useQuery];\n});\n_c = HomeRecipeCard;\nvar _c;\n$RefreshReg$(_c, \"HomeRecipeCard\");","map":{"version":3,"names":["Grid","useQuery","RecipeCard","jsxDEV","_jsxDEV","HomeRecipeCard","_s","data","recipes","isFetching","res","fetch","json","console","log","Box","component","sx","flexGrow","p","width","sm","EXPLORE_SIDE_PANEL_WIDTH","children","Toolbar","fileName","_jsxFileName","lineNumber","columnNumber","Loading","container","spacing","map","_ref","id","title","image","SearchGridItem","discription","_c","$RefreshReg$"],"sources":["/home/gayan/Documents/Personal/dish/src/modules/Home/components/HomeRecipeCard.tsx"],"sourcesContent":["import { Grid } from '@mui/material';\nimport { useQuery } from 'react-query';\nimport { RecipeCard } from '../../../components/RecipeCard';\n\nexport const HomeRecipeCard = () => {\n  const { data: { recipes } = {}, isFetching } = useQuery(['test'], async () => {\n    const res = await fetch(\n      'https://api.spoonacular.com/recipes/random?apiKey=3a919f863b6f473e93b2473cdd0b6e3d',\n    );\n    return res.json();\n  });\n  console.log(recipes);\n\n  return (\n    <Box\n      component='main'\n      sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${EXPLORE_SIDE_PANEL_WIDTH}px)` } }}\n    >\n      <Toolbar />\n      {isFetching || !recipes ? (\n        <Loading />\n      ) : (\n        <Grid container spacing={3}>\n          {recipes.map(({ id, title, image }: Recipe) => (\n            <SearchGridItem id={id} title={title} image={image} key={id} />\n          ))}\n        </Grid>\n      )}\n    </Box>\n  );\n\n  return <RecipeCard id={123} title={'titel'} image='' discription='asdasdasd' />;\n};\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,UAAU,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC,IAAI,EAAE;MAAEC;IAAQ,CAAC,GAAG,CAAC,CAAC;IAAEC;EAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,YAAY;IAC5E,MAAMS,GAAG,GAAG,MAAMC,KAAK,CACrB,oFAAoF,CACrF;IACD,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EAEpB,oBACEJ,OAAA,CAACW,GAAG;IACFC,SAAS,EAAC,MAAM;IAChBC,EAAE,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,KAAK,EAAE;QAAEC,EAAE,EAAG,eAAcC,wBAAyB;MAAK;IAAE,CAAE;IAAAC,QAAA,gBAEvFnB,OAAA,CAACoB,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACVnB,UAAU,IAAI,CAACD,OAAO,gBACrBJ,OAAA,CAACyB,OAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAEXxB,OAAA,CAACJ,IAAI;MAAC8B,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,EACxBf,OAAO,CAACwB,GAAG,CAACC,IAAA;QAAA,IAAC;UAAEC,EAAE;UAAEC,KAAK;UAAEC;QAAc,CAAC,GAAAH,IAAA;QAAA,oBACxC7B,OAAA,CAACiC,cAAc;UAACH,EAAE,EAAEA,EAAG;UAACC,KAAK,EAAEA,KAAM;UAACC,KAAK,EAAEA;QAAM,GAAMF,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;EAGR,oBAAOxB,OAAA,CAACF,UAAU;IAACgC,EAAE,EAAE,GAAI;IAACC,KAAK,EAAE,OAAQ;IAACC,KAAK,EAAC,EAAE;IAACE,WAAW,EAAC;EAAW;IAAAb,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACjF,CAAC;AAACtB,EAAA,CA5BWD,cAAc;EAAA,QACsBJ,QAAQ;AAAA;AAAAsC,EAAA,GAD5ClC,cAAc;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}