{"ast":null,"code":"var _jsxFileName = \"/home/gayan/Documents/Personal/dish/src/components/RecipeCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 350,\n    margin: 'auto',\n    borderRadius: '16px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    transition: '0.3s',\n    '&:hover': {\n      transform: 'scale(1.1)'\n    }\n  },\n  media: {\n    height: 200,\n    objectFit: 'cover'\n  },\n  content: {\n    padding: '16px',\n    backgroundColor: '#f4f4f4',\n    borderTop: '1px solid #e2e2e2'\n  },\n  title: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    color: '#222'\n  },\n  divider: {\n    width: '100%',\n    height: '2px',\n    backgroundColor: '#e2e2e2',\n    margin: '1rem 0'\n  }\n});\nexport const RecipeCard = _ref => {\n  _s();\n  let {\n    title,\n    image\n  } = _ref;\n  const classes = useStyles();\n  const id = 1234;\n  const {\n    data: {\n      results: recipes\n    } = {},\n    isFetching\n  } = useQuery(['test'], async () => {\n    const res = await fetch(`https://api.spoonacular.com/recipes/${id}/summary?apiKey=3a919f863b6f473e93b2473cdd0b6e3d&query=pasta&maxFat=25&number=16`);\n    return res.json();\n  });\n\n  // console.log('asd', recipes);\n\n  const discription = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod tristique urna, euplacerat justo elementum vel. Nulla facilisi. Nullam a justo at tortor rhoncus auctorvel ac turpis.';\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: image,\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              className: classes.title,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: isFetching ? 'asd' : discription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeCard, \"p3a9IZy6Fa9IEgt7DFwD/nj2TSI=\", false, function () {\n  return [useStyles, useQuery];\n});\n_c = RecipeCard;\nvar _c;\n$RefreshReg$(_c, \"RecipeCard\");","map":{"version":3,"names":["React","makeStyles","Card","CardActionArea","CardMedia","Grid","Typography","useQuery","jsxDEV","_jsxDEV","useStyles","root","maxWidth","margin","borderRadius","overflow","boxShadow","transition","transform","media","height","objectFit","content","padding","backgroundColor","borderTop","title","fontSize","fontWeight","color","divider","width","RecipeCard","_ref","_s","image","classes","id","data","results","recipes","isFetching","res","fetch","json","discription","className","children","fileName","_jsxFileName","lineNumber","columnNumber","container","alignItems","item","xs","variant","component","_c","$RefreshReg$"],"sources":["/home/gayan/Documents/Personal/dish/src/components/RecipeCard.tsx"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { RecipeCardProps } from '../modules/Explore/components/types';\nimport { useQuery } from 'react-query';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 350,\n    margin: 'auto',\n    borderRadius: '16px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    transition: '0.3s',\n    '&:hover': {\n      transform: 'scale(1.1)',\n    },\n  },\n  media: {\n    height: 200,\n    objectFit: 'cover',\n  },\n  content: {\n    padding: '16px',\n    backgroundColor: '#f4f4f4',\n    borderTop: '1px solid #e2e2e2',\n  },\n  title: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    color: '#222',\n  },\n  divider: {\n    width: '100%',\n    height: '2px',\n    backgroundColor: '#e2e2e2',\n    margin: '1rem 0',\n  },\n});\n\nexport const RecipeCard = ({ title, image }: RecipeCardProps) => {\n  const classes = useStyles();\n  const id = 1234;\n\n  const { data: { results: recipes } = {}, isFetching } = useQuery(['test'], async () => {\n    const res = await fetch(\n      `https://api.spoonacular.com/recipes/${id}/summary?apiKey=3a919f863b6f473e93b2473cdd0b6e3d&query=pasta&maxFat=25&number=16`,\n    );\n    return res.json();\n  });\n\n  // console.log('asd', recipes);\n\n  const discription =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod tristique urna, euplacerat justo elementum vel. Nulla facilisi. Nullam a justo at tortor rhoncus auctorvel ac turpis.';\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia className={classes.media} image={image} title={title} />\n        <div className={classes.content}>\n          <Grid container alignItems='center'>\n            <Grid item xs>\n              <Typography variant='h5' component='h2' className={classes.title}>\n                {title}\n              </Typography>\n            </Grid>\n          </Grid>\n          <div className={classes.divider}></div>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {isFetching ? 'asd' : discription}\n          </Typography>\n        </div>\n      </CardActionArea>\n    </Card>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}